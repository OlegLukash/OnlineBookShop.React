/* tslint:disable */
/* eslint-disable */
/**
 * OnlineBookShop.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BookDto
 */
export interface BookDto {
    /**
     * 
     * @type {number}
     * @memberof BookDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof BookDto
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BookDto
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof BookDto
     */
    publishedOn?: Date;
    /**
     * 
     * @type {number}
     * @memberof BookDto
     */
    publisherId?: number;
    /**
     * 
     * @type {number}
     * @memberof BookDto
     */
    price?: number;
}

export function BookDtoFromJSON(json: any): BookDto {
    return BookDtoFromJSONTyped(json, false);
}

export function BookDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'publishedOn': !exists(json, 'publishedOn') ? undefined : (new Date(json['publishedOn'])),
        'publisherId': !exists(json, 'publisherId') ? undefined : json['publisherId'],
        'price': !exists(json, 'price') ? undefined : json['price'],
    };
}

export function BookDtoToJSON(value?: BookDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'description': value.description,
        'publishedOn': value.publishedOn === undefined ? undefined : (value.publishedOn.toISOString()),
        'publisherId': value.publisherId,
        'price': value.price,
    };
}

