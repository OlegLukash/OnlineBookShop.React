/* tslint:disable */
/* eslint-disable */
/**
 * OnlineBookShop.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Filter,
    FilterFromJSON,
    FilterFromJSONTyped,
    FilterToJSON,
    FilterLogicalOperators,
    FilterLogicalOperatorsFromJSON,
    FilterLogicalOperatorsFromJSONTyped,
    FilterLogicalOperatorsToJSON,
} from './';

/**
 * 
 * @export
 * @interface RequestFilters
 */
export interface RequestFilters {
    /**
     * 
     * @type {FilterLogicalOperators}
     * @memberof RequestFilters
     */
    logicalOperator?: FilterLogicalOperators;
    /**
     * 
     * @type {Array<Filter>}
     * @memberof RequestFilters
     */
    filters?: Array<Filter> | null;
}

export function RequestFiltersFromJSON(json: any): RequestFilters {
    return RequestFiltersFromJSONTyped(json, false);
}

export function RequestFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestFilters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'logicalOperator': !exists(json, 'logicalOperator') ? undefined : FilterLogicalOperatorsFromJSON(json['logicalOperator']),
        'filters': !exists(json, 'filters') ? undefined : (json['filters'] === null ? null : (json['filters'] as Array<any>).map(FilterFromJSON)),
    };
}

export function RequestFiltersToJSON(value?: RequestFilters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'logicalOperator': FilterLogicalOperatorsToJSON(value.logicalOperator),
        'filters': value.filters === undefined ? undefined : (value.filters === null ? null : (value.filters as Array<any>).map(FilterToJSON)),
    };
}


